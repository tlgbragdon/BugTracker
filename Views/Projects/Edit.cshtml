@model BugTracker.Models.ProjectAssignViewModel

@section contentHeader
{
    <!-- Content Header(Page header) -->
    <section class="content-header">
        <h1>Edit Project</h1>

        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i>Dashboard</a></li>
            <li><a href="@Url.Action("Index")">Projects</a></li>
            <li class="active">@Html.DisplayFor(model => model.project.Name)</li>
        </ol>

    </section>
}
<div class="row">
    <div class="col-xs-12">
        <div class="box box-info">
            <div class="box-header with-border">
                <h3 class="box-title">@Html.DisplayFor(model => model.project.Name)</h3>
            </div>
            <div class="box-body">

                @using (Html.BeginForm("Edit", "Projects", FormMethod.Post, new { encType = "Multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.HiddenFor(m => m.project.Id)

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(model => model.project.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.project.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.project.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.project.Description, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.project.Description, new { htmlAttributes = new { @class = "form-control", rows = "10" } })
                                @Html.ValidationMessageFor(model => model.project.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.project.MediaUrl, htmlAttributes: new { @class = "control-label col-md-3" })

                            <div class="col-md-3">
                                @if (Model.project.MediaUrl != null)
                                {
                                    <img src="@Url.Content(Model.project.MediaUrl)" class="img-thumbnail" width="100" height="100" />
                                }
                            </div>
                            <div class="col-md-6">
                                <input name="imgFile" type="file" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3">Project Manager</label>
                            <div class="col-md-9">
                                @Html.DropDownListFor(m => m.project.OwnerId, (SelectList)Model.projectMgrs)
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3">Assigned to Project</label>
                            <label class="control-label col-md-3">Select to Remove From Project:</label>
                            <div class="col-md-6">
                                @Html.ListBoxFor(m => m.usersToRemove, (MultiSelectList)Model.usersOnProject, new { size = 6 })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-offset-3 col-md-3">Select to Add To Project:</label>
                            <div class="col-md-6">
                                @Html.ListBoxFor(m => m.usersToAdd, (MultiSelectList)Model.usersNotOnProject, new { size = 6 })
                            </div>
                        </div>

                        <div class="row form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save Changes" class="btn btn-primary " />
                                <input class="btn btn-primary" type="reset" value="Reset">
                                @Html.ActionLink("Cancel", "Index", "Projects", null, new { @class = "btn btn-primary " })
                            </div>
                        </div>
                    </div>
                }
            </div>  <!-- /.box-body -->

            <div class="box-footer">
                <div class="col-sm-4 col-md-3">
                    <i class="fa fa-arrow-left" aria-hidden="true"></i>
                       @if (User.IsInRole("Administrator"))
                       {
                            @Html.ActionLink("Back to All Projects List", "AllIndex")
                       }
                       else
                       {
                            @Html.ActionLink("Back to Project List", "Index")
                       }
                    </div>
            </div><!-- /.box-footer-->
        </div>   <!-- /.box -->
    </div>
</div>