@model BugTracker.Models.ProjectAssignViewModel

@{
    ViewBag.Title = "Edit Project";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Projects", FormMethod.Post, new { encType = "Multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    @*@Html.HiddenFor(m => m.project.MediaUrl)*@
    @Html.HiddenFor(m => m.project.Id)



    <div class="form-horizontal">
        <h4>Project</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.project.Name, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.project.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.project.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        
       
        <div class="form-group">
            @Html.LabelFor(model => model.project.Description, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.project.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.project.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        

        <div class="form-group">
            @Html.LabelFor(model => model.project.MediaUrl, htmlAttributes: new { @class = "control-label col-md-3" })
           
            <div class="col-md-3">
                @if (Model.project.MediaUrl != null)
                {
                    <img src="@Url.Content(Model.project.MediaUrl)" class="img-thumbnail" width="100" height="100" />
                }
            </div>
            <div class="col-md-6">
                <input name="imgFile" type="file" />
            </div>
        </div>


        <div class="form-group">
            <div class="control-label col-md-3">Project Manager:</div>
            <div class="col-md-9">          
                  @Html.DropDownListFor(m => m.project.OwnerId, (SelectList)Model.projectMgrs)     
            </div>
        </div>

        <div class="form-group"> 
            <div class="control-label col-md-3">Assigned to Project:</div>
                <div class="control-label col-md-3">Select to Remove From Project:</div>
                <div class="col-md-6">
                    @Html.ListBoxFor(m => m.usersToRemove, (MultiSelectList)Model.usersOnProject, new { size = 6 })
                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-offset-3 col-md-3">Select to Add To Project:</div>
                <div class="col-md-6">
                    @Html.ListBoxFor(m => m.usersToAdd, (MultiSelectList)Model.usersNotOnProject, new { size = 6 })
                </div>
            </div>

        <div class="row form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save Changes" class="btn btn-primary btn-default " />
                <input class="btn btn-primary" type="reset" value="Reset">
                @Html.ActionLink("Cancel", "Index", "Projects", null, new { @class = "btn btn-primary " })
            </div>
        </div>
    </div>
    }

        <div>
            @Html.ActionLink("Back to Project List", "Index")
        </div>
